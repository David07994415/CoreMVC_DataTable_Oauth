// <auto-generated />
using System;
using Core_8_MVC_Oauth_DataTable.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core_8_MVC_Oauth_DataTable.Migrations
{
    [DbContext(typeof(coredbContext))]
    partial class coredbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core_8_MVC_Oauth_DataTable.Models.Logger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LogTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlPath")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Logger");
                });

            modelBuilder.Entity("Core_8_MVC_Oauth_DataTable.Models.Orders", b =>
                {
                    b.Property<int>("Ids")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ids"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderFulfilled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.HasKey("Ids");

                    b.HasIndex(new[] { "CustomerID" }, "IX_Orders_CustomerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Core_8_MVC_Oauth_DataTable.Models.customer", b =>
                {
                    b.Property<int>("Ids")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ids"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ids");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("Core_8_MVC_Oauth_DataTable.Models.orderdetails", b =>
                {
                    b.Property<int>("Ids")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ids"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Ids");

                    b.HasIndex(new[] { "OrderID" }, "IX_orderdetails_OrderID");

                    b.HasIndex(new[] { "ProductID" }, "IX_orderdetails_ProductID");

                    b.ToTable("orderdetails");
                });

            modelBuilder.Entity("Core_8_MVC_Oauth_DataTable.Models.product", b =>
                {
                    b.Property<int>("Ids")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ids"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6, 2)");

                    b.HasKey("Ids");

                    b.ToTable("product");
                });

            modelBuilder.Entity("Core_8_MVC_Oauth_DataTable.Models.Orders", b =>
                {
                    b.HasOne("Core_8_MVC_Oauth_DataTable.Models.customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Core_8_MVC_Oauth_DataTable.Models.orderdetails", b =>
                {
                    b.HasOne("Core_8_MVC_Oauth_DataTable.Models.Orders", "Order")
                        .WithMany("orderdetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core_8_MVC_Oauth_DataTable.Models.product", "Product")
                        .WithMany("orderdetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core_8_MVC_Oauth_DataTable.Models.Orders", b =>
                {
                    b.Navigation("orderdetails");
                });

            modelBuilder.Entity("Core_8_MVC_Oauth_DataTable.Models.customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Core_8_MVC_Oauth_DataTable.Models.product", b =>
                {
                    b.Navigation("orderdetails");
                });
#pragma warning restore 612, 618
        }
    }
}
